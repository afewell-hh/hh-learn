name: Validate CMS Templates (v3)

on:
  pull_request:
    branches: [ main ]
    paths:
      - 'clean-x-hedgehog-templates/**'
      - 'scripts/hubspot/validate-template.ts'
      - '.github/workflows/validate-templates.yml'
  push:
    branches: [ main ]
    paths:
      - 'clean-x-hedgehog-templates/**'
      - 'scripts/hubspot/validate-template.ts'

permissions:
  contents: read

jobs:
  validate:
    runs-on: ubuntu-latest
    env:
      HUBSPOT_PROJECT_ACCESS_TOKEN: ${{ secrets.HUBSPOT_PROJECT_ACCESS_TOKEN }}
      HUBSPOT_PRIVATE_APP_TOKEN: ${{ secrets.HUBSPOT_PRIVATE_APP_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install deps
        run: npm ci

      - name: Build CJS scripts
        run: npm run build:scripts-cjs

      - name: Detect changed template files
        id: changed
        uses: tj-actions/changed-files@v45
        with:
          files: |
            clean-x-hedgehog-templates/**
          separator: '\n'

      - name: Validate changed assets against published deps
        if: steps.changed.outputs.any_changed == 'true'
        env:
          FILES: ${{ steps.changed.outputs.all_changed_files }}
        run: |
          set -e
          status=0
          # The changed-files action is configured with separator: '\n', which
          # yields a literal backslash-n sequence in $FILES. Decode to real newlines
          # before iterating so each path is validated individually.
          FILES_DECODED="$(printf '%b' "$FILES")"

          echo "Changed files:"
          printf '%s\n' "$FILES_DECODED" | sed 's/^/ - /'

          while IFS= read -r file; do
            case "$file" in
              *.html|*.js|*.css)
                dm_path="${file#clean-x-hedgehog-templates/}"
                dm_path="CLEAN x HEDGEHOG/templates/${dm_path}"
                echo "\nValidating: $file -> $dm_path"
                npm run -s validate:template -- --path "$dm_path" --local "$file" --env published || status=$?
                ;;
              *)
                ;; # ignore other files
            esac
          done <<< "$FILES_DECODED"
          exit $status
